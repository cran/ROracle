#
# select library path from an environment variable
#
if [ -n "${OCI_LIB64}" -a $R_ARCH = '/x64' ] ; then
  ROCI_LIB=${OCI_LIB64}
else
  if [ -n "${OCI_LIB32}" -a $R_ARCH = '/i386' ] ; then
    ROCI_LIB=${OCI_LIB32}
  else

    CURL=curl
    UNZIP=unzip

    if [ ! -d "${ROCI_LIB}" ] ; then
      if test "$CURL" != ""; then

        downloaded_file_url="https://download.oracle.com/otn_software/nt/instantclient/instantclient-sdk-windows.zip"
        downloaded_file_name="instantclient-sdk-windows.zip"
        echo $CURL -o $downloaded_file_name $downloaded_file_url >&2
        $CURL -o $downloaded_file_name $downloaded_file_url >&2
        echo $UNZIP -uo $downloaded_file_name >&2
        $UNZIP -uo $downloaded_file_name >&2

        directory=`$UNZIP -l $downloaded_file_name | grep -m1 'instantclient_' | awk '{print $4}' | awk -F/ '{print $1}'`

        ROCI_LIB=./$directory
        OCI_LIB64=./$directory
      else
        echo "ERROR: " ${ROCI_LIB} " directory does not exist." >&2
        if [ $R_ARCH = '/x64' ] ; then
          echo "       Please set OCI_LIB64 to specify its location." >&2
        else
          echo "       Please set OCI_LIB32 to specify its location." >&2
        fi
        exit 1
      fi
    else
      echo "ERROR: " ${ROCI_LIB} " directory does not exist." >&2
      if [ $R_ARCH = '/x64' ] ; then
        echo "       Please set OCI_LIB64 to specify its location." >&2
      else
        echo "       Please set OCI_LIB32 to specify its location." >&2
      fi
      exit 1
    fi
  fi
fi

#
# select include path from an environment variable
# or from a standard location in case of Instant Client.
#
if [ -n "${OCI_INC}" ] ; then
  ROCI_INC=${OCI_INC}
  echo "found Oracle Client" ${ROCI_LIB}
  echo "found Oracle Client include" ${ROCI_INC} 
else
  if [ -d "${ROCI_LIB}/sdk/include" ] ; then
    ROCI_INC="${ROCI_LIB}/sdk/include"
    echo "found Instant Client" ${ROCI_LIB} 
    echo "found Instant Client SDK" ${ROCI_INC} 
  else
    echo "ERROR: cannot find "${ROCI_LIB}"/sdk/include or Oracle Client include." >&2
    echo "       Please set OCI_INC to specify its location." >&2
    exit 1
  fi
fi

#
# check Oracle Client headers are in ROCI_INC
#
if test ! -f $ROCI_INC/oci.h ; then
  echo "ERROR: cannot find Oracle Client include headers in "${ROCI_INC}"." >&2
  echo "       Please set OCI_INC to correct location." >&2
  exit 1
fi

#
# patch 64bit include headers
#
echo "copying from" ${ROCI_INC}
cp ${ROCI_INC}/nzerror.h ./src/oci
cp ${ROCI_INC}/nzt.h ./src/oci
cp ${ROCI_INC}/oci.h ./src/oci
cp ${ROCI_INC}/oci1.h ./src/oci
cp ${ROCI_INC}/oci8dp.h ./src/oci
cp ${ROCI_INC}/ociap.h ./src/oci
cp ${ROCI_INC}/ociapr.h ./src/oci
cp ${ROCI_INC}/ocidfn.h ./src/oci
cp ${ROCI_INC}/ociextp.h ./src/oci
cp ${ROCI_INC}/ocixmldb.h ./src/oci
cp ${ROCI_INC}/ocixstream.h ./src/oci
cp ${ROCI_INC}/ori.h ./src/oci
cp ${ROCI_INC}/orid.h ./src/oci
cp ${ROCI_INC}/orl.h ./src/oci
cp ${ROCI_INC}/oro.h ./src/oci
cp ${ROCI_INC}/ort.h ./src/oci
if test -f $ROCI_INC/ociver.h ; then
  cp ${ROCI_INC}/ociver.h ./src/oci
fi

