## 
## $Id: Makefile.win st_server_demukhin_r/1 2011/07/22 22:11:37 vsashika Exp $
##
## We need the Microsoft Visual C/C++ to compile ROracle.dll in order
## to satisfy Oracle's requirements (I think).  See the manual 
## "Pro*C/C++ Precompiler" Release 9.2 for Windows (Part No. A96111-01),
## in particular the section "Library Files" in Chapter 2.
## You may also want to take a look at the batch file
##    $(ORACLE_HOME)/precomp/demo/proc/pcmake.bat 
## used for compiling and linking the Pro*C/C++ demo programs.
##
## Also very helpful are Duncan Murdoch's "Using external compilers with R"
## at http://www.stats.uwo.ca/faculty/murdoch/software/compilingDLLs/
## and the "readme.packages" in $(R_HOME)/src/gnuwin32
##
## Required variables, you should (re-) define them below:
##   $(R_HOME) 
##   $(R_INCLUDES)   include director for R *.h files
##   $(ORACLE_HOME)  directory where Oracle resides
##   $(ORACLE_LIB)   path to the orasql9.lib library file
##
## Required directories in your $PATH (most likely in this order):
##   (1) $(R_HOME)/bin and Rtools
##   (2) $(ORACLE_HOME)/bin
##   (3) $(MSVCDir),  Microsoft Visual C++ tools (cl, lib, link, etc.)
##
## As per David Hinds suggestion (see http://msdn.microsoft.com)
## we link the VisualStudio fp10.obj file to avoid the dreaded
## "DLL attempted to change the FP ..."
##
## TODO:  Automate the creation of ROracle.def
## TODO:  Create the Rdll.lib import only if needed (currently we create
##        it unconditionally).

## Paths must not have spaces
R_HOME = c:\\PROGRA~1\\R\\R-2.2.1
R_INCLUDES = $(R_HOME)\\include         
#R_INCLUDES = $(R_HOME)\\src\\include   ## for R Windows Source (maybe?)

ORACLE_HOME = c:\\oracle\\ora92
ORACLE_LIB = $(ORACLE_HOME)\\precomp\\lib\\orasql9.lib

SRC  = RS-DBI.h RS-DBI.c RS-Oracle.h RS-Oracle.pc S4R.h
RLIB = $(R_HOME)\\src\\gnuwin32\\Rdll.lib
OBJ  = RS-DBI.obj RS-Oracle.obj 

##  The macro RS_ORA_SQLGLS_WORKAROUND should only be defined
##  for Oracle 9.2 (as it is done in this file)
WORKAROUND = "-DRS_ORA_SQLGLS_WORKAROUND"

##
## The Oracle ProC/C++ precompiler and options we need (these have worked
## on Linux, Solaris, and Windows 2000).
##

PROC=proc              ## this is the ProC/C++ executable
CODE=ANSI_C            ## the following are ProC/C++ options
MODE=ORACLE
PARSE=NONE             ## don't do any C parse
LINES=false            ## use true for debugging
PREFETCH=1
#PREFETCH=0            ## uncomment against Oracle 8i (up to 8.2.7.2)

ROracle.dll:  $(OBJ) $(RLIB)
	(cd $(R_HOME)\\src\\gnuwin32 && lib /def:R.exp /out:Rdll.lib)
	link /dll /def:ROracle.def /out:ROracle.dll fp10.obj $(ORACLE_LIB) *.obj $(R_HOME)\\src\\gnuwin32\\Rdll.lib 
	
RS-DBI.obj: RS-DBI.h RS-DBI.c S4R.h
	cl /I$(R_INCLUDES) /MT /Ox /D "MSVC" /D "WIN32" /c RS-DBI.c

RS-Oracle.obj: RS-Oracle.h RS-Oracle.c S4R.h
	cl /I$(R_INCLUDES) $(WORKAROUND) /MT /Ox /D "MSVC" /D "WIN32" /c RS-Oracle.c

RS-Oracle.c: RS-Oracle.h RS-Oracle.pc 
	$(PROC) CODE=$(CODE) MODE=$(MODE) INCLUDE=$(R_HOME)/include \
                PARSE=$(PARSE) LINES=$(LINES) PREFETCH=$(PREFETCH) RS-Oracle.pc
force-Rdll.lib:
	(cd $(R_HOME)\\src\\gnuwin32 && lib /def:R.exp /out:Rdll.lib)
clean:
	rm -f $(OBJ) *.a *.d *.rc 
clobber:
	rm -f $(RLIB) $(OBJ) RS-Oracle.c *.a *.d *.rc *.dll 

##
## the following is the original manual compilation I used (by following 
## Duncan Murdoch's help and Oracle's documentation.
##

# cl /Ic:\cygwin\home\dj\R-1.7.1\src\include /MT /Ox /D "WIN32" /c *.c
# link /dll /def:ROracle.def /out:ROracle.dll c:\oracle\ora92\precomp\lib\orasql9.lib *.obj ..\..\..\gnuwin32\Rdll.lib 

